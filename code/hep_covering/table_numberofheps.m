Attach("hep_utils.m");
RR := RealField(6);
for N in [6..100] do
    if IsSquarefree(N) and #PrimeFactors(N) mod 2 eq 0 then
        try
            num_hep, cm_d1 := NumberOfHeptagonsInCover(N);
            area_ratio, cm_d2 := AreaRatio(N);
            assert cm_d1 eq cm_d2;
            print N, cm_d1, num_hep, area_ratio;
//            printf "Discriminant of quat alg = %o, discriminant of imag quad subring corresponding to cm point = %o\nNumber of heptagonal discs in an (almost-)cover = %o, Ratio of area of fundamental domain to area of heptagonal disc = %o\n" N, cm_d1, num_hep, area_ratio;
        catch e;
//            print N, e;
        end try;
    end if;
end for;

/*
6 -19 5 2.00000000000000000000000000000
10 -8 9 4.00000000000000000000000000001
15 -7 15 8.00000000000000000000000000001
21 -7 23 12.0000000000000000000000000000
22 -11 20 9.99999999999999999999999999997
33 -15 33 19.9999999999999999999999999999
34 -11 34 15.9999999999999999999999999999
35 -7 42 23.9999999999999999999999999999
38 -11 30 18.0000000000000000000000000001
39 -7 47 24.0000000000000000000000000000
51 -7 61 32.0000000000000000000000000003
55 -15 72 40.0000000000000000000000000003
57 -7 61 36.0000000000000000000000000004
58 -8 55 27.9999999999999999999999999991
65 -7 89 48.0000000000000000000000000005
69 -24 75 44.0000000000000000000000000004
77 -11 104 59.9999999999999999999999999988
82 -11 78 40.0000000000000000000000000004
85 -7 113 64.0000000000000000000000000034
86 -11 74 41.9999999999999999999999999999
87 -15 97 56.0000000000000000000000000002
^[^[91 -7 115 71.9999999999999999999999999962
93 -7 104 60.0000000000000000000000000007
95 -7 122 71.9999999999999999999999999988
*/




for N in [6..100] do
    if IsSquarefree(N) and #PrimeFactors(N) mod 2 eq 0 then
        try
            area_ratio, cm_d2 := AreaRatio_SingleDisc(N);
            print area_ratio;
        catch e;
//            print N, e;
        end try;
    end if;
end for;
/*
2.96039560679269712939738274232
2.17423461417476714729592611205
2.68693177121688000494103539529
3.00000000000000000000000000001
2.84673758792281719591036688094
4.66407091004953312602836554465
7.65433188095656278592755921144
2.00000000000000000000000000001
2.78228389397022410068372469202
2.28571428571428571428571428572
3.76311896062463196871605392028
7.23809523809523809523809523812
4.15980311211281803249515013352
2.74170646428631621435350486892
4.38913583631203928958413936423
4.00000000000000000000000000015
3.63618901703642798035608483127
5.99553571428571428571428571401
5.06282488397003234879261325033
5.42689605247745994566068033074
6.39549750285802872810568684155
3.03710512597658598588048725075
3.45238095238095238095238095253
*/